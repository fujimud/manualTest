<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="MSI" ignored="49" name="Default test" tests="1" failures="0" timestamp="08 Oct 2017 23:28:04 GMT" time="0.716" errors="0">
  <testcase name="readXSSF" time="0.701" classname="testNGs.testFunctionalities"/>
  <testcase name="FileReturnTrue" time="0.0" classname="testNGs.testFunctionalities">
    <ignored/>
  </testcase> <!-- FileReturnTrue -->
  <testcase name="getFile" time="0.0" classname="testNGs.testFunctionalities">
    <ignored/>
  </testcase> <!-- getFile -->
  <testcase name="putArrayListIntoFile" time="0.0" classname="testNGs.testFunctionalities">
    <ignored/>
  </testcase> <!-- putArrayListIntoFile -->
  <testcase name="getJsonArrayWithObjects" time="0.0" classname="testNGs.testFunctionalities">
    <ignored/>
  </testcase> <!-- getJsonArrayWithObjects -->
  <testcase name="noExceptionMessageIsThrownWhenEachParamterHasAValidData" time="0.0" classname="testNGs.testFunctionalities">
    <ignored/>
  </testcase> <!-- noExceptionMessageIsThrownWhenEachParamterHasAValidData -->
  <testcase name="Fail2getFile" time="0.0" classname="testNGs.testFunctionalities">
    <ignored/>
  </testcase> <!-- Fail2getFile -->
  <testcase name="displayExceptionMessageForJsonArray" time="0.0" classname="testNGs.testFunctionalities">
    <ignored/>
  </testcase> <!-- displayExceptionMessageForJsonArray -->
  <testcase name="FileReturnFalse" time="0.0" classname="testNGs.testFunctionalities">
    <ignored/>
  </testcase> <!-- FileReturnFalse -->
  <testcase name="getJSONFile" time="0.0" classname="testNGs.testFunctionalities">
    <ignored/>
  </testcase> <!-- getJSONFile -->
  <testcase name="badFileNameOrLocationThrowsJsonExceptionError" time="0.0" classname="testNGs.testFunctionalities">
    <ignored/>
  </testcase> <!-- badFileNameOrLocationThrowsJsonExceptionError -->
  <testcase name="putInfoIntoLog" time="0.0" classname="testNGs.testFunctionalities">
    <ignored/>
  </testcase> <!-- putInfoIntoLog -->
  <testcase name="displayFileNotFoundExceptionMessage" time="0.0" classname="testNGs.testFunctionalities">
    <ignored/>
  </testcase> <!-- displayFileNotFoundExceptionMessage -->
  <testcase name="confirmExceptionErrorMessage" time="0.0" classname="testNGs.testFunctionalities">
    <ignored/>
  </testcase> <!-- confirmExceptionErrorMessage -->
  <testcase name="runMultipleJsonTests" time="0.0" classname="testNGs.testFunctionalities">
    <ignored/>
  </testcase> <!-- runMultipleJsonTests -->
  <testcase name="runArrayOfData" time="0.0" classname="testNGs.testFunctionalities">
    <ignored/>
  </testcase> <!-- runArrayOfData -->
  <testcase name="openChromeDriver" time="0.0" classname="testNGs.testFunctionalities">
    <ignored/>
  </testcase> <!-- openChromeDriver -->
  <testcase name="getJsonArray" time="0.0" classname="testNGs.testFunctionalities">
    <ignored/>
  </testcase> <!-- getJsonArray -->
  <testcase name="noMatchFoundinJSONArray" time="0.0" classname="testNGs.testFunctionalities">
    <ignored/>
  </testcase> <!-- noMatchFoundinJSONArray -->
  <testcase name="noMatchFound4Key" time="0.0" classname="testNGs.testFunctionalities">
    <ignored/>
  </testcase> <!-- noMatchFound4Key -->
  <testcase name="get2ProductPage" time="0.0" classname="testNGs.testFunctionalities">
    <ignored/>
  </testcase> <!-- get2ProductPage -->
  <testcase name="readMSExcell" time="0.0" classname="testNGs.testFunctionalities">
    <ignored/>
  </testcase> <!-- readMSExcell -->
  <testcase name="getDataWithInvalidFileURL" time="0.0" classname="testNGs.testFunctionalities">
    <ignored/>
  </testcase> <!-- getDataWithInvalidFileURL -->
  <testcase name="throwTestException" time="0.0" classname="testNGs.testFunctionalities">
    <ignored/>
  </testcase> <!-- throwTestException -->
  <testcase name="openChrome" time="0.0" classname="testNGs.testFunctionalities">
    <ignored/>
  </testcase> <!-- openChrome -->
  <testcase name="openTMobile" time="0.0" classname="testNGs.testFunctionalities">
    <ignored/>
  </testcase> <!-- openTMobile -->
  <testcase name="getFileThenAssign2Array" time="0.0" classname="testNGs.testFunctionalities">
    <ignored/>
  </testcase> <!-- getFileThenAssign2Array -->
  <testcase name="getEBayfromEnum" time="0.0" classname="testNGs.testFunctionalities">
    <ignored/>
  </testcase> <!-- getEBayfromEnum -->
  <testcase name="throwJsonExceptionWhenfindMatchIsEmpty" time="0.0" classname="testNGs.testFunctionalities">
    <ignored/>
  </testcase> <!-- throwJsonExceptionWhenfindMatchIsEmpty -->
  <testcase name="throwJsonExceptionWhenPathNameIsEmpty" time="0.0" classname="testNGs.testFunctionalities">
    <ignored/>
  </testcase> <!-- throwJsonExceptionWhenPathNameIsEmpty -->
  <testcase name="throwFileNotFoundException" time="0.0" classname="testNGs.testFunctionalities">
    <ignored/>
  </testcase> <!-- throwFileNotFoundException -->
  <testcase name="openIEwebpage" time="0.0" classname="testNGs.testFunctionalities">
    <ignored/>
  </testcase> <!-- openIEwebpage -->
  <testcase name="ListingOfPossibleWebpageNamesWorks" time="0.0" classname="testNGs.testFunctionalities">
    <ignored/>
  </testcase> <!-- ListingOfPossibleWebpageNamesWorks -->
  <testcase name="displayErrorMessageWhenBadFileNameIsPassed" time="0.0" classname="testNGs.testFunctionalities">
    <ignored/>
  </testcase> <!-- displayErrorMessageWhenBadFileNameIsPassed -->
  <testcase name="validFileNameNoException" time="0.0" classname="testNGs.testFunctionalities">
    <ignored/>
  </testcase> <!-- validFileNameNoException -->
  <testcase name="DifferentDirectory" time="0.0" classname="testNGs.testFunctionalities">
    <ignored/>
  </testcase> <!-- DifferentDirectory -->
  <testcase name="throwExceptionErrorWhenJSONpathIsInvalid" time="0.0" classname="testNGs.testFunctionalities">
    <ignored/>
  </testcase> <!-- throwExceptionErrorWhenJSONpathIsInvalid -->
  <testcase name="displayJsonExceptionMessage" time="0.0" classname="testNGs.testFunctionalities">
    <ignored/>
  </testcase> <!-- displayJsonExceptionMessage -->
  <testcase name="throwJsonExceptionWhenJsonPathIsEmpty" time="0.0" classname="testNGs.testFunctionalities">
    <ignored/>
  </testcase> <!-- throwJsonExceptionWhenJsonPathIsEmpty -->
  <testcase name="findNoMatchFromJsonObject" time="0.0" classname="testNGs.testFunctionalities">
    <ignored/>
  </testcase> <!-- findNoMatchFromJsonObject -->
  <testcase name="getFileFromJson" time="0.0" classname="testNGs.testFunctionalities">
    <ignored/>
  </testcase> <!-- getFileFromJson -->
  <testcase name="triggerJsonException" time="0.0" classname="testNGs.testFunctionalities">
    <ignored/>
  </testcase> <!-- triggerJsonException -->
  <testcase name="getJsonObject" time="0.0" classname="testNGs.testFunctionalities">
    <ignored/>
  </testcase> <!-- getJsonObject -->
  <testcase name="putArrayStringIntoFile" time="0.0" classname="testNGs.testFunctionalities">
    <ignored/>
  </testcase> <!-- putArrayStringIntoFile -->
  <testcase name="throwJsonExceptionWhenAllParametersIsEmpty" time="0.0" classname="testNGs.testFunctionalities">
    <ignored/>
  </testcase> <!-- throwJsonExceptionWhenAllParametersIsEmpty -->
  <testcase name="displayExceptionErrorForJsonObject" time="0.0" classname="testNGs.testFunctionalities">
    <ignored/>
  </testcase> <!-- displayExceptionErrorForJsonObject -->
  <testcase name="putTextIntoFile" time="0.0" classname="testNGs.testFunctionalities">
    <ignored/>
  </testcase> <!-- putTextIntoFile -->
  <testcase name="openFireDrier" time="0.0" classname="testNGs.testFunctionalities">
    <ignored/>
  </testcase> <!-- openFireDrier -->
  <testcase name="getJsonArrayAndReturnaValue" time="0.0" classname="testNGs.testFunctionalities">
    <ignored/>
  </testcase> <!-- getJsonArrayAndReturnaValue -->
  <testcase name="invaldFileprovided" time="0.0" classname="testNGs.testFunctionalities">
    <ignored/>
  </testcase> <!-- invaldFileprovided -->
</testsuite> <!-- Default test -->
